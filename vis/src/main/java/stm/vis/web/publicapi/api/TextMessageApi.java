/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package stm.vis.web.publicapi.api;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-09-01T09:18:32.002Z")

@Api(value = "textMessage", description = "the textMessage API")
public interface TextMessageApi {

	@ApiOperation(value = "", notes = "Upload text message to VIS from other services i.e. Route Optimization service.", response = Void.class, tags = {
			"TextMessage", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "OK", response = Void.class),
			@ApiResponse(code = 400, message = "Bad Request", response = Void.class),
			@ApiResponse(code = 401, message = "Unauthorized (the user cannot be auhtenticated in the Identity Registry)", response = Void.class),
			@ApiResponse(code = 403, message = "Forbidden", response = Void.class),
			@ApiResponse(code = 405, message = "Method not allowed", response = Void.class),
			@ApiResponse(code = 500, message = "Internal Server Error", response = Void.class),
			@ApiResponse(code = 200, message = "unexpected error", response = Void.class) })

	@RequestMapping(value = "/textMessage", produces = { "application/json" }, consumes = {
			"text/xml" }, method = RequestMethod.POST)
	ResponseEntity<Void> uploadTextMessage(HttpServletRequest request,
			@ApiParam(value = "STM Text message v1.3", required = true) @Valid @RequestBody String textMessageObject,
			@ApiParam(value = "Acknowledgement expected. Base URL for VIS as in Service Registry. An ACK is expected to this URL when the receiving private application retrieve the message") @RequestParam(value = "deliveryAckEndPoint", required = false) String deliveryAckEndPoint);

}
