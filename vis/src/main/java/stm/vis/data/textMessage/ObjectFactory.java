//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.09.03 at 10:34:56 AM GMT+01:00 
//


package stm.vis.data.textMessage;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the stm.vis.data.textMessage package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: stm.vis.data.textMessage
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link GMSurface }
     * 
     */
    public GMSurface createGMSurface() {
        return new GMSurface();
    }

    /**
     * Create an instance of {@link TextMessage }
     * 
     */
    public TextMessage createTextMessage() {
        return new TextMessage();
    }

    /**
     * Create an instance of {@link GMPoint }
     * 
     */
    public GMPoint createGMPoint() {
        return new GMPoint();
    }

    /**
     * Create an instance of {@link S100CircleByCenterPointType }
     * 
     */
    public S100CircleByCenterPointType createS100CircleByCenterPointType() {
        return new S100CircleByCenterPointType();
    }

    /**
     * Create an instance of {@link GMSurface.Polygon }
     * 
     */
    public GMSurface.Polygon createGMSurfacePolygon() {
        return new GMSurface.Polygon();
    }

}
