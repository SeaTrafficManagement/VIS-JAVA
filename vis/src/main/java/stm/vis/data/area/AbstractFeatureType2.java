//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.09.03 at 12:29:04 PM GMT+01:00 
//


package stm.vis.data.area;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * Abstract type for an S-100 feature. This is the base type from which domain application schemas derive definitions for their individual features. It derives from GML AbstractFeatureType. It provides for all information types in the data product's GML application schema to have feature identifiers and properties for feature associations, information associations and inverse information associations.
 * 
 * <p>Java class for AbstractFeatureType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AbstractFeatureType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.opengis.net/gml/3.2}AbstractFeatureType">
 *       &lt;sequence>
 *         &lt;element name="featureObjectIdentifier" type="{http://www.iho.int/s100gml/1.0}FeatureObjectIdentifier" minOccurs="0"/>
 *         &lt;element ref="{http://www.iho.int/s100gml/1.0}informationAssociation" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.iho.int/s100gml/1.0}featureAssociation" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.iho.int/s100gml/1.0}invFeatureAssociation" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AbstractFeatureType", namespace = "http://www.iho.int/s100gml/1.0", propOrder = {
    "featureObjectIdentifier",
    "informationAssociation",
    "featureAssociation",
    "invFeatureAssociation"
})
@XmlSeeAlso({
    S124FeatureTypeType.class
})
public class AbstractFeatureType2
    extends AbstractFeatureType
{

    protected FeatureObjectIdentifier featureObjectIdentifier;
    protected List<InformationPropertyType> informationAssociation;
    protected List<FeaturePropertyType> featureAssociation;
    protected List<FeaturePropertyType> invFeatureAssociation;

    /**
     * Gets the value of the featureObjectIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link FeatureObjectIdentifier }
     *     
     */
    public FeatureObjectIdentifier getFeatureObjectIdentifier() {
        return featureObjectIdentifier;
    }

    /**
     * Sets the value of the featureObjectIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link FeatureObjectIdentifier }
     *     
     */
    public void setFeatureObjectIdentifier(FeatureObjectIdentifier value) {
        this.featureObjectIdentifier = value;
    }

    /**
     * Gets the value of the informationAssociation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the informationAssociation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInformationAssociation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InformationPropertyType }
     * 
     * 
     */
    public List<InformationPropertyType> getInformationAssociation() {
        if (informationAssociation == null) {
            informationAssociation = new ArrayList<InformationPropertyType>();
        }
        return this.informationAssociation;
    }

    /**
     * Gets the value of the featureAssociation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the featureAssociation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFeatureAssociation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FeaturePropertyType }
     * 
     * 
     */
    public List<FeaturePropertyType> getFeatureAssociation() {
        if (featureAssociation == null) {
            featureAssociation = new ArrayList<FeaturePropertyType>();
        }
        return this.featureAssociation;
    }

    /**
     * Gets the value of the invFeatureAssociation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the invFeatureAssociation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInvFeatureAssociation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FeaturePropertyType }
     * 
     * 
     */
    public List<FeaturePropertyType> getInvFeatureAssociation() {
        if (invFeatureAssociation == null) {
            invFeatureAssociation = new ArrayList<FeaturePropertyType>();
        }
        return this.invFeatureAssociation;
    }

}
