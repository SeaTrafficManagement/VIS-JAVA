//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.09.03 at 12:29:04 PM GMT+01:00 
//


package stm.vis.data.area;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for generalAreaType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="generalAreaType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Baltic sea"/>
 *     &lt;enumeration value="Skagerrak"/>
 *     &lt;enumeration value="Kattegat"/>
 *     &lt;enumeration value="Lake Vänern and Trollhätte Canal"/>
 *     &lt;enumeration value="The Sound"/>
 *     &lt;enumeration value="The Belts"/>
 *     &lt;enumeration value="Western Baltic"/>
 *     &lt;enumeration value="Southern Baltic"/>
 *     &lt;enumeration value="South-eastern Baltic"/>
 *     &lt;enumeration value="Central Baltic"/>
 *     &lt;enumeration value="Lake Mälaren and Södertälje Canal"/>
 *     &lt;enumeration value="Northern Baltic"/>
 *     &lt;enumeration value="Gulf of Riga"/>
 *     &lt;enumeration value="Gulf of Finland"/>
 *     &lt;enumeration value="Sea of Åland and Archipelago Sea"/>
 *     &lt;enumeration value="Sea of Bothnia"/>
 *     &lt;enumeration value="The Quark"/>
 *     &lt;enumeration value="Bay of Bothnia"/>
 *     &lt;enumeration value="Other lakes and canals"/>
 *     &lt;enumeration value="Western Mediterranean Sea"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "generalAreaType", namespace = "http://www.iho.int/S124/gml/1.0")
@XmlEnum
public enum GeneralAreaType {

    @XmlEnumValue("Baltic sea")
    BALTIC_SEA("Baltic sea"),
    @XmlEnumValue("Skagerrak")
    SKAGERRAK("Skagerrak"),
    @XmlEnumValue("Kattegat")
    KATTEGAT("Kattegat"),
    @XmlEnumValue("Lake V\u00e4nern and Trollh\u00e4tte Canal")
    LAKE_VÄNERN_AND_TROLLHÄTTE_CANAL("Lake V\u00e4nern and Trollh\u00e4tte Canal"),
    @XmlEnumValue("The Sound")
    THE_SOUND("The Sound"),
    @XmlEnumValue("The Belts")
    THE_BELTS("The Belts"),
    @XmlEnumValue("Western Baltic")
    WESTERN_BALTIC("Western Baltic"),
    @XmlEnumValue("Southern Baltic")
    SOUTHERN_BALTIC("Southern Baltic"),
    @XmlEnumValue("South-eastern Baltic")
    SOUTH_EASTERN_BALTIC("South-eastern Baltic"),
    @XmlEnumValue("Central Baltic")
    CENTRAL_BALTIC("Central Baltic"),
    @XmlEnumValue("Lake M\u00e4laren and S\u00f6dert\u00e4lje Canal")
    LAKE_MÄLAREN_AND_SÖDERTÄLJE_CANAL("Lake M\u00e4laren and S\u00f6dert\u00e4lje Canal"),
    @XmlEnumValue("Northern Baltic")
    NORTHERN_BALTIC("Northern Baltic"),
    @XmlEnumValue("Gulf of Riga")
    GULF_OF_RIGA("Gulf of Riga"),
    @XmlEnumValue("Gulf of Finland")
    GULF_OF_FINLAND("Gulf of Finland"),
    @XmlEnumValue("Sea of \u00c5land and Archipelago Sea")
    SEA_OF_ÅLAND_AND_ARCHIPELAGO_SEA("Sea of \u00c5land and Archipelago Sea"),
    @XmlEnumValue("Sea of Bothnia")
    SEA_OF_BOTHNIA("Sea of Bothnia"),
    @XmlEnumValue("The Quark")
    THE_QUARK("The Quark"),
    @XmlEnumValue("Bay of Bothnia")
    BAY_OF_BOTHNIA("Bay of Bothnia"),
    @XmlEnumValue("Other lakes and canals")
    OTHER_LAKES_AND_CANALS("Other lakes and canals"),
    @XmlEnumValue("Western Mediterranean Sea")
    WESTERN_MEDITERRANEAN_SEA("Western Mediterranean Sea");
    private final String value;

    GeneralAreaType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static GeneralAreaType fromValue(String v) {
        for (GeneralAreaType c: GeneralAreaType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
